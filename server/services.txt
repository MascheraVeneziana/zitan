POST    /add                  CalendarController.addEvent
 TODO:今後メンバーを追加する
 Example Data
 {
	"name":"test",
	"room":"test",
	"date":"2018/03/23",
	"startTime":"09:12:00",
	"endTime":"10:12:00"
}

=========================================================================================================
GET     /api/v1/users                UsersController.users           registered application users list
=========================================================================================================
response: array
[ {
  "id": "1234567890",
  "name": "サンプルさん",
  "email": "sample_san@gmail.com"
} ]

=========================================================================================================
GET     /api/v1/users/me             UsersController.me              a application user (create if not exist)
=========================================================================================================
response:
{
  "id": "1234567890",
  "name": "サンプルさん",
  "email": "sample_san@gmail.com"
}

=========================================================================================================
GET     /api/v1/users/id/{id}             UsersController.me              get a user by id (error if not exist)
=========================================================================================================
response:
{
  "id": "1234567890",
  "name": "サンプルさん",
  "email": "sample_san@gmail.com"
}

=========================================================================================================
POST    /api/v1/users/new            UsersController.create          create a new user
=========================================================================================================
response:
{
  "id": "1234567890",
  "name": "サンプルさん",
  email: "sample_san@gmail.com"
}

=========================================================================================================
GET     /api/v1/system               SystemController.system         system information
=========================================================================================================

==========================================================================================================
GET     /api/v1/provider/google/users                       get all-users's profile
==========================================================================================================
response: array
[ {
  "id": "1234567890",
  "name": "サンプルさん",
  email: "sample_san@gmail.com"
} ]

=========================================================================================================
GET     /api/v1/provider/google/users/me                    get end-user's profile
=========================================================================================================
response:
{
  "id": "1234567890",
  "name": "サンプルさん",
  email: "sample_san@gmail.com"
}

=========================================================================================================
GET     /api/v1/provider/google/users/id/{id}               find google-user by id
=========================================================================================================
response:
{
  "id": "1234567890",
  "name": "サンプルさん",
  "email": "sample_san@gmail.com"
}

==========================================================================================================
GET     /api/v1/provider/google/users/email/{email}         find google-user by email
==========================================================================================================
response:
{
  "id": "1234567890",
  "name": "サンプルさん",
  "email": "sample_san@gmail.com"
}

==========================================================================================================
GET     /api/v1/provider/google/resources
==========================================================================================================
response: array
[ {
  id: "resource_id@resource_id.google",
  "name": "R&D10FGinga"
} ]

/*
 * 以下調整中
 */
==========================================================================================================
POST    /api/v1/provider/google/status                      check free (true) or busy (false)
==========================================================================================================
request:
{
  "minDate": "2018-06-01T07:00:00Z",          // UTC (-09:00:00)
  "maxDate": "2018-06-01T08:30:00Z",          // UTC (-09:00:00)
  "ids": [ "user@mail_address", "resource@mail_address" ]
}
response:
[ {
  "id": "user@mail_address",
  "status": true                              // free
}, {
  "id": "resource@mail_address",
  "status": false                               // busy
} ]
